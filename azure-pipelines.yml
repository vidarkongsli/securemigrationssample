trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- name: azureServiceConnection
  value: 'SECURED_MIGRATIONS_WEBAPP'
- name: location
  value: NorwayEast

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        modifyOutputPath: false
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
        projects: 'src/SecureMigrationsSample.Web/SecureMigrationsSample.Web.csproj'
        zipAfterPublish: true

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: app

- stage: Provision
  dependsOn: []
  jobs:
  - deployment: Provision
    displayName: Provision application infrastructure
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - download: none
          - task: AzureResourceGroupDeployment@2
            inputs:
              azureSubscription: $(azureServiceConnection)
              action: 'Create Or Update Resource Group'
              resourceGroupName: $(resourceGroupName)
              location: $(location) 
              templateLocation: 'Linked artifact'
              csmFile: deployment/azuredeploy.json
              csmParametersFile: deployment/azuredeploy.parameters.json
              overrideParameters: -aadAdminOid $(aadAdminOid) -aadAdminLogin $(aadAdminLogin)
              deploymentMode: 'Incremental'
              deploymentOutputs: FOOBAR
          - pwsh: |
              Write-host "Output! $($env:FOOBAR)"

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy application
    environment: production
    strategy:
      runOnce:
        preDeploy:
          steps:
          - download: current

          - task: ExtractFiles@1
            displayName: Extract application
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/app/*.zip'
              destinationFolder: '$(System.DefaultWorkingDirectory)/work'

          - script: |
              env ConnectionStrings:DefaultConnection="$CONN_STRING" dotnet '$(System.DefaultWorkingDirectory)/work/SecureMigrationsSample.Web.dll' --migrate --thenExit
            env:
              CONN_STRING: $(connectionString)
            displayName: Run database migrations
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: Deploy application
            inputs:
              appType: webAppLinux
              azureSubscription: $(azureServiceConnection)
              appName: 'securedmigrationssample'
              package: '$(Pipeline.Workspace)/app/*.zip'
